# -*- coding: utf-8 -*-
"""Targeted_Car_Ad_Data_Preprocessing.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nYyDgZDya72uhPEgUv_NadcRSboC5fI5
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score
import pickle

# Data manipulation and preprocessing
import pandas as pd
import random
from sklearn.preprocessing import OneHotEncoder

# Data splitting
from sklearn.model_selection import train_test_split

# Machine learning models
from sklearn.ensemble import RandomForestClassifier

# Model evaluation
from sklearn.metrics import classification_report

# Hyperparameter optimization
from sklearn.model_selection import GridSearchCV

from google.colab import drive
drive.mount('/content/drive')

datapath_df = '/content/drive/MyDrive/Data_Mining/toyota_vehicle_predictions_realistic.csv'
df_realistic = pd.read_csv(datapath_df)
df_realistic.head()

df_realistic.info()

for col in df_realistic.columns:
    print(f'{col}: {df_realistic[col].nunique()}')

# Separate features and target variable
X_realistic = df_realistic.drop("Toyota Model", axis=1)
y_realistic = df_realistic["Toyota Model"]

# Encode categorical variables using one-hot encoding
encoder = OneHotEncoder()
X_realistic_encoded = encoder.fit_transform(X_realistic)

# Split into training and testing sets
X_train_realistic, X_test_realistic, y_train_realistic, y_test_realistic = train_test_split(
    X_realistic_encoded, y_realistic, test_size=0.2, random_state=42
)

# Train a Random Forest classifier
model_realistic = RandomForestClassifier(random_state=42, n_estimators=100)
model_realistic.fit(X_train_realistic, y_train_realistic)

# Make predictions on the test set
y_pred_realistic = model_realistic.predict(X_test_realistic)

# Evaluate the model
report_realistic = classification_report(y_test_realistic, y_pred_realistic, target_names=df_realistic["Toyota Model"].unique())

report_realistic

# prompt: i would like to dowload the pickle file

import pickle
from google.colab import files

# Assuming 'model_realistic' is your trained model
filename = 'model_realistic.pkl'
pickle.dump(model_realistic, open(filename, 'wb'))

files.download(filename)